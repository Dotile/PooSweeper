==16904== Memcheck, a memory error detector
==16904== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==16904== Using Valgrind-3.10.0.SVN and LibVEX; rerun with -h for copyright info
==16904== Command: ./PooSweeperMain
==16904== Parent PID: 9976
==16904== 
==16904== Stack overflow in thread 1: can't grow stack to 0xffe801fd8
==16904== 
==16904== Process terminating with default action of signal 11 (SIGSEGV)
==16904==  Access not within mapped region at address 0xFFE801FD8
==16904==    at 0x401E87: PooSweeperState::applyMove(PooSweeperMove const&) (PooSweeperState.cpp:54)
==16904==  If you believe this happened as a result of a stack
==16904==  overflow in your program's main thread (unlikely but
==16904==  possible), you can try to increase the size of the
==16904==  main thread stack using the --main-stacksize= flag.
==16904==  The main thread stack size used in this run was 8388608.
==16904== Stack overflow in thread 1: can't grow stack to 0xffe801fc8
==16904== 
==16904== Process terminating with default action of signal 11 (SIGSEGV)
==16904==  Access not within mapped region at address 0xFFE801FC8
==16904==    at 0x4A256B0: _vgnU_freeres (in /usr/lib/valgrind/vgpreload_core-amd64-linux.so)
==16904==  If you believe this happened as a result of a stack
==16904==  overflow in your program's main thread (unlikely but
==16904==  possible), you can try to increase the size of the
==16904==  main thread stack using the --main-stacksize= flag.
==16904==  The main thread stack size used in this run was 8388608.
==16904== 
==16904== HEAP SUMMARY:
==16904==     in use at exit: 158,913 bytes in 399 blocks
==16904==   total heap usage: 407 allocs, 8 frees, 163,813 bytes allocated
==16904== 
==16904== LEAK SUMMARY:
==16904==    definitely lost: 0 bytes in 0 blocks
==16904==    indirectly lost: 0 bytes in 0 blocks
==16904==      possibly lost: 0 bytes in 0 blocks
==16904==    still reachable: 158,913 bytes in 399 blocks
==16904==         suppressed: 0 bytes in 0 blocks
==16904== Rerun with --leak-check=full to see details of leaked memory
==16904== 
==16904== For counts of detected and suppressed errors, rerun with: -v
==16904== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
